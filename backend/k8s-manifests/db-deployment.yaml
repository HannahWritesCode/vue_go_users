apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes-manifests
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes-manifests
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: db
    spec:
      containers:
        - args:
            - --default-authentication-plugin=mysql_native_password
          command:
            - sh
            - -c
            - ' echo ''CREATE DATABASE IF NOT EXISTS users; CREATE DATABASE IF NOT EXISTS test_users;'' > /docker-entrypoint-initdb.d/init.sql; /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci '
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: local_mysql_password
          image: registry.digitalocean.com/hannahwritescode-registry/mysql:5.7.24
          name: users-db
          ports:
            - containerPort: 3306
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: db-claim0
      restartPolicy: Always
      volumes:
        - name: db-claim0
          persistentVolumeClaim:
            claimName: db-claim0
status: {}
